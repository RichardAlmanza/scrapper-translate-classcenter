"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5823],{1029:function(a,e){e.Z=a=>{let{content:e,style:n,id:t=""}=a;return'\n  <div class="cmpt-modal active">\n    <div data-name="MODAL_CLOSE" data-detail=\'{ "id": "'.concat(t,'" }\' class="cmpt-modal-blanket scrollable-y z-top border-box fixed top left height-100 padding-small large-up-padding-xlarge width-100">\n      <div class="cmpt-modal-container bg-white radius border-box width-centered width-100 relative" style="min-width: auto; max-width: ').concat(n.width,'px;">\n        <button\n          data-name="MODAL_CLOSE" \n          data-detail=\'{ "close": true }\'\n          class="radius-circle scale-on-hover bg-gray-light z-force-top absolute top right margin-vert-xsmall margin-horz-xsmall"\n        >\n          <span class="margin-xsmall icon-center icon-x-charcoal icon-small">Close</span>\n        </button>\n        <div data-template="modal-content" style="min-height: ').concat(isNaN(n.height)?n.height:"".concat(n.height,"px"),';">\n          ').concat(e,"\n        </div>\n      </div>      \n    </div>\n  </div>\n")}},2913:function(a,e){const n=(a,e,n)=>{const t={error:{border:"red-light",color:"red",bg:"red-xlight"},warning:{border:"yellow-mid",color:"charcoal",bg:"yellow-xlight"},info:{border:"blue-light",color:"charcoal",bg:"blue-xlight"},success:{border:"green-mid",color:"charcoal",bg:"green-xlight"}},l=document.createElement("div");l.innerHTML='\n    <div data-name="NOTICE_CMPT" data-notice class="radius-small\n      border-all border-'.concat(t[a].border," \n      color-").concat(t[a].color," text-left text-3 padding-horz-xsmall padding-vert-xxsmall padding-right-xxlarge margin-vert-xxsmall relative\n      bg-").concat(t[a].bg,' text-left text-3 padding-horz-xsmall padding-vert-xxsmall padding-right-xxlarge margin-vert-xxsmall relative\n    ">\n      <div class="').concat(a,'-content">').concat(n,'</div>\n      <button\n        type="button"\n        data-name="REMOVE_PARENT"\n        data-detail=\'{ "target": "NOTICE_CMPT" }\'\n        class="block absolute top right padding-horz-xsmall padding-vert-xxsmall"\n      >\n        <i class="icon-xsmall icon-x-charcoal"></i>\n      </button>\n    </div>\n  '),document.querySelector(e).prepend(l.firstElementChild)};e.Z={error:(a,e)=>{n("error",a,e)},success:(a,e)=>{n("success",a,e)},warning:(a,e)=>{n("warning",a,e)},info:(a,e)=>{n("info",a,e)}}},382:function(a,e){e.Z=()=>'\n  <div class="row vert-align-middle horz-align-center absolute left right top bottom"><div class="loader-bars"></div></div>\n'},8117:function(a,e){e.Z=a=>'\n  <button\n    class="'.concat(a.isLoading?" processing ":"").concat(a.style?a.style:"btn-blue"," btn-").concat(a.size||"large",' relative"\n    type="').concat(a.type?a.type:"submit",'"').concat(a.isLoading?" disabled":"","\n  >\n    ").concat(a.isLoading?'<span\n        class="loader-bars '.concat(a.loaderStyle?a.loaderStyle:"loader-white",' loader-small absolute"\n        style="left: 50%; margin-left: -2.5px;"\n      ></span>\n      <span class="invisible">').concat(a.label,"</span>"):a.label,"\n  </button>\n")},3788:function(a,e,n){n.r(e),n.d(e,{default:function(){return g}});n(5982);var t=n(9894),l=n(1029),i=n(382),o=n(8785),s=n(2913),d=a=>'\n<div class="padding-medium">\n  <h3 class="head-3">Add user handle</h3>\n  <p class="margin-vert-small line-tight">\n    Personalize your public profile with a Class Central user handle.\n  </p>\n  '.concat(a.locked?'\n  <div class="row nowrap vert-align-top bg-yellow-xlight radius-small border-all border-yellow-mid padding-small">\n    <div class="margin-right-small">\n      <span\n        class="row horz-align-center vert-align-middle border-all radius-circle bg-yellow-mid border-yellow-mid"\n        style="width: 25px; height: 25px;">\n        <i class="icon-lock-white icon-center icon-xsmall"></i>\n      </span>\n    </div>\n    <p class="line-tight">To unlock and add a user handle youâ€™ll need to complete your profile. See your <a class="color-charcoal underline" href="'.concat(a.gettingStartedUrl,'">Getting Started List</a> to see what items remain.</p>\n  </div>\n  '):'\n    <form data-name="HANDLE_FORM" '.concat(a.isLoading?'class="transparent"':"",'>\n      <fieldset class="relative margin-bottom-xsmall">\n        <label class="row text-2 margin-bottom-xxsmall" for="handle-input">\n          Choose your handle\n          <span data-template="field-message-handle-status" class="horz-align-right">\n          ').concat(a.readyToConfirm?'\n            <span class="padding-horz-xxsmall bg-green-light border-green-light radius-small">\n              <span class="text-4 icon-left-xsmall icon-checkmark">Looks good</span>\n            </span>\n          ':"",'\n          </span>\n        </label>\n        <span\n          style="top: 35px; left: 10px;"\n          class="weight-bold head-2 absolute"\n        >\n          @\n        </span>\n        <input\n          type="text"\n          value="').concat(a.handle||"",'"\n          name="handle"\n          id="handle-input"\n          ').concat(a.isLoading?"disabled":'data-name="HANDLE_INPUT"','          \n          class="width-100 input-large input-white padding-left-xlarge"\n        />\n      </fieldset>\n      <div data-template="field-message-handle" class="margin-bottom-xsmall"></div>\n      <div class="row nowrap horz-align-right vert-align-middle">\n        <button\n          type="button"\n          class="text-2 color-gray margin-right-small"\n          data-name="MODAL_CLOSE" \n          data-detail=\'{ "close": true }\'\n        >Cancel</button>\n        <div data-template="handle-submit-button">\n          <button class="btn-blue btn-medium">').concat(a.readyToConfirm?"Confirm & Save":"Next","</button>\n        </div>\n      </div>\n    </form>"),"\n</div>\n"),r=n(8117);const c=()=>(0,t.y0)().profile.handle,m=a=>(0,t.IW)({profile:{...(0,t.y0)().profile,handle:{...c(),...a}}});var g=a=>{switch(a.name){case"click:ADD_USER_HANDLE":(0,t.sY)("modal",(0,l.Z)({content:(0,i.Z)(),style:{width:400,height:230}})),(0,o.Z)("HANDLE_CHECK_ELIGIBILITY");break;case"request:HANDLE_CHECK_ELIGIBILITY_SUCCESS":m({locked:!a.detail.json.userEligibleForHandle,readyToConfirm:!1}),(0,t.sY)("modal",(0,l.Z)({content:d({...c(),gettingStartedUrl:(0,t.y0)().data.urls.user.gettingStarted}),style:{width:400,height:230}}));break;case"keyup:HANDLE_INPUT":m({readyToConfirm:!1}),(0,t.sY)("field-message-handle",null),(0,t.sY)("field-message-handle-status",null);break;case"submit:HANDLE_FORM":{a.originalEvent.preventDefault();const e=new FormData(a.target).get("handle");m({handle:e,isLoading:!0}),(0,t.sY)("modal",(0,l.Z)({content:d(c()),style:{width:400,height:230}}),(()=>{window.requestAnimationFrame((()=>{(0,t.sY)("handle-submit-button",(0,r.Z)({label:c().readyToConfirm?"Confirm & Save":"Next",size:"medium",isLoading:!0}))}))})),c().readyToConfirm?(0,o.Z)("HANDLE_SET",{data:{handle:e}}):(0,o.Z)("HANDLE_CHECK_AVAILABILITY",{data:{handle:e}});break}case"request:HANDLE_SET_SUCCESS":window.location.reload();break;case"request:HANDLE_SET_ERROR":h(a.detail.json.message,!1);break;case"request:HANDLE_CHECK_AVAILABILITY_SUCCESS":{(0,t.sY)("field-message-handle",null);const{available:e,valid:n,invalidReasons:i}=a.detail.json;e&&n?(m({readyToConfirm:!0,isLoading:!1}),(0,t.sY)("modal",(0,l.Z)({content:d(c()),style:{width:400,height:230}}),(()=>{window.requestAnimationFrame((()=>{s.Z.info("[data-template=field-message-handle]",'<span class="text-3 icon-alert-blue icon-left-small">Once you set your handle it cannot be changed.</span>')}))}))):h(!(!i||!i.length)&&i[0],!e&&'The handle "'.concat(c().handle,'" is unavailable'));break}}};const h=(a,e)=>{m({readyToConfirm:!1,isLoading:!1}),(0,t.sY)("modal",(0,l.Z)({content:d(c()),style:{width:400,height:230}}),(()=>{window.requestAnimationFrame((()=>{a?s.Z.error("[data-template=field-message-handle]",a):e&&s.Z.warning("[data-template=field-message-handle]",e),(0,t.sY)("handle-submit-button",(0,r.Z)({label:"Next",size:"medium",isLoading:!1}))}))}))}}}]);